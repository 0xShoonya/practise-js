
<!DOCTYPE html>
<html>
<head>
    <title>Expense Tracker</title>
    <style>
        body {
            font-family: Arial;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            text-align: center;
        }
        input[type="text"] {
            width: 100%;
            padding: 12px 20px;
            margin: 8px 0;
            box-sizing: border-box;
        }
        input[type="submit"] {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor:pointer
        }
        ul {
          list-style-type:none
          padding-left :0
          margin-top :20px
          text-align:left
        }
    </style>
</head>
<body>
    <div class="container">
      <h1>Expense Tracker</h1>
      <form id="form">
          <input type="text" id="description" placeholder="Description">
          <input type="text" id="category" placeholder="Category">
          <input type="number" id="amount" placeholder="Amount">
          <input type="submit" value="Submit">
      </form>

      <ul id='expensesList'>
      </ul>

    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.4/axios.min.js"></script>
    <script>
const API_URL = 'https://crudcrud.com/api/b49563959e17450cb717f659771e8f20/expenses';

const form = document.querySelector('#form');
const expensesList = document.querySelector('#expensesList');

// Function to get and display expenses from API
function getExpenses() {
  // Send GET request to API
  axios.get(API_URL)
    .then(res => {
      // Get expenses from response data
      const expenses = res.data;
      // Clear expenses list
      expensesList.innerHTML = '';
      // Loop through expenses and create list item for each one
      expenses.forEach(expense => {
        const expenseEl = document.createElement('li');
        expenseEl.innerHTML = `${expense.description} - ${expense.category} - $${expense.amount}
          <button onclick="deleteExpense('${expense._id}')">Delete</button>
          <button onclick="editExpense('${expense._id}')">Edit</button>
        `;
        // Append list item to expenses list
        expensesList.appendChild(expenseEl);
      });
    })
    .catch(err => console.error(err));
}

// Function to delete an expense from the API
function deleteExpense(id) {
  // Send DELETE request to API for specified expense ID
  axios.delete(`${API_URL}/${id}`)
    .then(() => getExpenses())
    .catch(err => console.error(err));
}

// Function to edit an expense 
function editExpense(id) {
  
  axios.get(`${API_URL}/${id}`)
    .then(res => {
      const expense = res.data;
      console.log(expense)
      document.querySelector('#description').value =   
       expense.description;
      document.querySelector('#category').value = 
       expense.category;
      document.querySelector('#amount').value = expense.amount;

        // Remove previous submit event listener
      form.removeEventListener('submit', handleFormSubmit)
       // Add new submit event listener for editing
      form.addEventListener('submit', (e) =>         
          handleEditFormSubmit(e, id));
      
      function handleEditFormSubmit(e, id) {
        e.preventDefault();
      // Get values from form inputs
      const description =   
       document.querySelector('#description').value;
      const category = 
        document.querySelector('#category').value;
      const amount = document.querySelector('#amount').value;

      axios.put(`${API_URL}/${id}`, { description, category, 
        amount })
      }
      // Remove submit event listener for editing
      form.removeEventListener('submit', (e) =>       
        handleEditFormSubmit(e,id));
    })
  .catch(err => console.error(err))
}

// Add event listener for form submission
form.addEventListener('submit', (e) => {
  e.preventDefault();
  // Get values from form inputs
  const description = document.querySelector('#description').value;
  const category = document.querySelector('#category').value;
  const amount = document.querySelector('#amount').value;

  // Send POST request to API with form data
  axios.post(API_URL, { description, category, amount })
    .then(() => {
      // Reset form and update displayed expenses
      form.reset();
      getExpenses();
    })
    .catch(err => console.error(err));
});

// Get and display initial expenses when page loads
getExpenses();
    </script>

</body>
</html>


